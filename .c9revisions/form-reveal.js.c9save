{"ts":1354506776548,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1354506793934,"patch":[[{"diffs":[[1,"// ------------------------------------------------ FORM-REVEAL PLUGIN  -------------------------------------------------- //\r\n\r\n;(function ( $, window, undefined ) {\r\n    \"use strict\"; //jshint\r\n\r\n    $.fn.formReveal = function (options) {\r\n        \r\n        return $(this).each(function () {\r\n\r\n            var selector = this;\r\n            var target;\r\n            var targetArr = [];\r\n            var type;\r\n            var group;\r\n\r\n            var FormReveal = {\r\n                init: function() {\r\n                    FormReveal.createTargetArray(this.getTarget());\r\n                    FormReveal.setTargetHeight();\r\n                    FormReveal.setInitialStyle();\r\n                    FormReveal.setTriggerType();\r\n                    FormReveal.getCurrentState();\r\n                    FormReveal.setEventListener();\r\n                },\r\n                getTarget: function() {\r\n                    // Retrieves target to reveal by id\r\n                    target = $(selector).attr('data-reveal-target');\r\n                    return(target)\r\n                },\r\n                createTargetArray: function(target) {\r\n                    $(target).each(function(){\r\n                        targetArr.push(this);\r\n                    });\r\n                },\r\n                setTargetHeight: function() {\r\n                    $(targetArr).each(function(){\r\n\r\n                        $(this).data('paddingTop', $(this).css('paddingTop'));\r\n                        $(this).data('paddingBottom', $(this).css('paddingBottom'));\r\n                        $(this).data('height', $(this).height());\r\n\r\n                    });\r\n                },\r\n                getOuterHTML: function(element) {\r\n                    var outerHTML = $(element).clone().wrap('<p>').parent().html();\r\n                    return outerHTML;\r\n                },\r\n                setInitialStyle: function() {\r\n                    $(targetArr).each(function(){\r\n                        $(this).css({\r\n                            'height': 0,\r\n                            'overflow': 'hidden',\r\n                            'opacity': 0\r\n                        });\r\n                    });\r\n                },\r\n                setTriggerType: function() {\r\n                    // Determines trigger type\r\n                    if ($(selector).attr('type') === 'radio') { // Radio buttons\r\n                        type = 'radio';\r\n                    } else if ($(selector).attr('type') === 'checkbox') { // Checkboxes\r\n                        type = 'checkbox';\r\n                    } else if ($(selector).parent().get(0).tagName === 'SELECT') { // Select Options\r\n                        type = 'select';\r\n                    } else { // Everything else\r\n                        type = 'div';\r\n                    }\r\n                },\r\n                getCurrentState: function(){\r\n                    \r\n                    $(targetArr).each(function(){\r\n                        $('select', this).each(function(){\r\n                            if($(this).attr('disabled')) {\r\n                                $(this).data('disabled', true);\r\n                            } else {\r\n                                $(this).data('disabled', false);\r\n                            }\r\n                        });\r\n                    });\r\n                    \r\n                    $(targetArr).each(function(){\r\n                        $('input', this).each(function(){\r\n                            if($(this).attr('disabled')) {\r\n                                $(this).data('disabled', true);\r\n                            } else {\r\n                                $(this).data('disabled', false);\r\n                            }\r\n                        });\r\n                    });\r\n                },\r\n                updateCurrentState: function(elem){\r\n\r\n                    var that = elem;\r\n                    console.log(that);\r\n\r\n                    $('select', that).each(function(){\r\n                        if($(this).attr('disabled')) {\r\n                            $(this).data('disabled', true);\r\n                        } else {\r\n                            $(this).data('disabled', false);\r\n                        }\r\n                    });\r\n\r\n                \r\n                    $('input', that).each(function(){\r\n                        if($(this).attr('disabled')) {\r\n                            $(this).data('disabled', true);\r\n                        } else {\r\n                            $(this).data('disabled', false);\r\n                        }\r\n                    });\r\n\r\n                },\r\n                setEventListener: function() {\r\n                    // Set up trigger listener based on selector type\r\n                    if (type === 'radio') {\r\n                        group = $(selector).attr('name');\r\n                        $('input[name=\"' + group + '\"]').change(function () { // listener for radio button group\r\n                            var state = $(selector).attr('checked');\r\n                            if (state === 'checked') {\r\n                                FormReveal.show();\r\n                            } else {\r\n                                FormReveal.hide();\r\n                            }\r\n                        });\r\n                        $('input[name=\"' + group + '\"]').trigger('change'); // Sets initial state\r\n                    }\r\n\r\n                    if (type === 'checkbox') {\r\n                        $(selector).change(function () {\r\n                            if ($(selector).is(':checked')) {\r\n                                FormReveal.show();\r\n                            } else {\r\n                                FormReveal.hide();\r\n                            }\r\n                        });\r\n                        $(selector).trigger('change'); // Sets initial state\r\n                    }\r\n\r\n                    if (type === 'select') {\r\n                        group = $(selector).parents('select');\r\n                        $(group).change(function () { // listener for select list option\r\n                            var val = $(group).val();\r\n                            if (val === $(selector).val()) {\r\n                                FormReveal.show();\r\n                            } else {\r\n                                FormReveal.hide();\r\n                            }\r\n                        });\r\n                        $(group).trigger('change'); // Sets initial state\r\n                    }\r\n\r\n                    if (type === 'div') {\r\n                        $(selector).click(function () {\r\n                            var _state = $(selector).data('toggle');\r\n                            if (_state === 'on') {\r\n                                $(selector).data('toggle', 'off');\r\n                                FormReveal.hide();\r\n                            } else {\r\n                                $(selector).data('toggle', 'on');\r\n                                FormReveal.show();\r\n                            }\r\n                            return false; // Useful to stop buttons and links trigger a default action\r\n                        });\r\n                    }\r\n                },\r\n                show: function() {\r\n                    $(targetArr).each(function(){\r\n\r\n                        // Added to enable Fluent Validation to function correctly\r\n                        $('select', this).each(function(){\r\n                            if(!$(this).data('disabled') === true) {\r\n                                $(this).removeAttr('disabled');\r\n                            }\r\n                        });\r\n                    \r\n                        $('input', this).each(function(){\r\n                            if(!$(this).data('disabled') === true) {\r\n                                $(this).removeAttr('disabled');\r\n                            }\r\n                        });\r\n                        \r\n                        $(this).stop().animate({\r\n                            'height': $(this).data('height')\r\n                        }, 300, function () {\r\n                            $(this).stop().animate({\r\n                                'opacity': 1                                \r\n                            });\r\n                            $(this).css({'height': 'auto', 'paddingTop': $(this).data('paddingTop'), 'paddingBottom': $(this).data('paddingTop')});\r\n                        });\r\n                    });\r\n                },\r\n                hide: function() {\r\n                    $(targetArr).each(function(){\r\n                        \r\n                        if($(this).css('opacity') > 0) { // Checks for current active element and updates input/select states\r\n                            FormReveal.updateCurrentState(this);\r\n                        }\r\n\r\n                        $(this).stop().animate({\r\n                            'opacity': 0\r\n                        }, 300, function () {\r\n                            $(this).stop().animate({\r\n                                'height': 0\r\n                            });\r\n                            $(this).css({'padding': 0});\r\n                        });\r\n\r\n                        // Added to enable Fluent Validation to function correctly      \r\n                        $('select', this).each(function(){\r\n                            if(!$(this).data('disabled') === true) {\r\n                                $(this).attr('disabled', 'disabled');\r\n                            }\r\n                        });\r\n                    \r\n                        $('input', this).each(function(){\r\n                            if(!$(this).data('disabled') === true) {\r\n                                $(this).attr('disabled', 'disabled');\r\n                            }\r\n                        });\r\n\r\n                    });\r\n                }\r\n            }\r\n            FormReveal.init(); \r\n        });\r\n    };\r\n}(jQuery, window));\r\n\r\n$(function () {\r\n    \"use strict\"; //jshint\r\n    //Initialise Plugin\r\n    if($('[data-reveal-target]').length > 0) {\r\n        $('[data-reveal-target]').formReveal();\r\n    }\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":10100}]],"length":10100,"saved":false}
{"ts":1354508764574,"patch":[[{"diffs":[[0,"on ("],[-1,"options"],[0,") {\r"]],"start1":226,"start2":226,"length1":15,"length2":8},{"diffs":[[0,"(target)"],[1,";"],[0,"\r\n      "]],"start1":1037,"start2":1037,"length1":16,"length2":17},{"diffs":[[0,"             if("],[-1,"!"],[0,"$(this).data('di"]],"start1":7422,"start2":7422,"length1":33,"length2":32},{"diffs":[[0,"             if("],[-1,"!"],[0,"$(this).data('di"]],"start1":7697,"start2":7697,"length1":33,"length2":32},{"diffs":[[0,"             if("],[-1,"!"],[0,"$(this).data('di"]],"start1":9309,"start2":9309,"length1":33,"length2":32},{"diffs":[[0," if("],[-1,"!"],[0,"$(th"]],"start1":9602,"start2":9602,"length1":9,"length2":8},{"diffs":[[0,"}\r\n            }"],[1,";"],[0,"\r\n            Fo"]],"start1":9818,"start2":9818,"length1":32,"length2":33}]],"length":10091,"saved":false}
